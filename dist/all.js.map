{"version":3,"sources":["server.js","assignments.js","sections.js"],"names":[],"mappings":";;;;;;;;kBAAA,IAAA;;;;mBACA,KAAA;;;;6BACA,gBAAA;;;;yBACA,YAAA;;;;yBACA,YAAA;;;;ACJA,IAAA,kBAAA,GAAA;AACA,KAAA,0BAAA,aAAA,IAAA;;;;;iBACA,IAAA;;;AACA,cAAA,CAAA,IAAA,GAAA,kBAAA,CAAA;;;;;;;GACA,CAAA;CACA,CAAA;;qBAEA,kBAAA;;ACPA,IAAA,qBAAA,GAAA;AACA,KAAA,0BAAA,aAAA,IAAA;;;;;iBACA,IAAA;;;AACA,cAAA,CAAA,IAAA,GAAA,eAAA,CAAA;;;;;;;GACA,CAAA;CACA,CAAA;;qBAEA,qBAAA;;AFDA,IAAA,GAAA,GAAA,uBAAA,CAAA;AACA,IAAA,MAAA,GAAA,6BAAA,CAAA;;AAEA,GAAA,CAAA,GAAA,yBAAA,SAAA,YAAA,CAAA,IAAA;MACA,KAAA,EAEA,EAAA;;;;AAFA,aAAA,GAAA,IAAA,IAAA,EAAA;;eACA,IAAA;;;AACA,UAAA,GAAA,IAAA,IAAA,EAAA,GAAA,KAAA;;AACA,YAAA,CAAA,GAAA,CAAA,iBAAA,EAAA,EAAA,GAAA,IAAA,CAAA,CAAA;;;;;;KAJA,YAAA;CAKA,EAAA,CAAA;AACA,GAAA,CAAA,GAAA,CAAA,MAAA,CAAA,MAAA,EAAA,CAAA,CAAA;AACA,GAAA,CAAA,GAAA,CAAA,MAAA,CAAA,cAAA,EAAA,CAAA,CAAA;AACA,GAAA,CAAA,GAAA,CAAA,6BAAA,CAAA,CAAA;;AAEA,IAAA,eAAA,GAAA,SAAA,GAAA,cAAA,CAAA;;;;;;;AAEA,uBAAA,gBAAA,WAAA,CAAA,eAAA,CAAA,8HAAA;QAAA,QAAA;;AACA,QAAA,cAAA,GAAA,QAAA,CAAA,SAAA,CAAA,CAAA,EAAA,QAAA,CAAA,MAAA,GAAA,CAAA,CAAA,CAAA;AACA,QAAA,UAAA,GAAA,OAAA,CAAA,eAAA,GAAA,GAAA,GAAA,QAAA,CAAA,CAAA;;AAEA,WAAA,CAAA,GAAA,2BAAA,cAAA,CAAA,CAAA;;AAEA,SAAA,IAAA,QAAA,IAAA,UAAA,EAAA;AACA,UAAA,UAAA,GAAA,QAAA,CAAA;AACA,UAAA,IAAA,aAAA,cAAA,CAAA;AACA,UAAA,OAAA,GAAA,UAAA,CAAA,QAAA,CAAA,CAAA;;AAEA,aAAA,CAAA,GAAA,CAAA,QAAA,UAAA,IAAA,CAAA,CAAA;;AAEA,YAAA,CAAA,UAAA,CAAA,CAAA,IAAA,EAAA,OAAA,CAAA,CAAA;KACA;GACA;;;;;;;;;;;;;;;;AAEA,GAAA,CAAA,IAAA,GAAA,YAAA;AACA,MAAA,IAAA,GAAA,OAAA,CAAA,GAAA,CAAA,IAAA,IAAA,KAAA,CAAA;AACA,KAAA,CAAA,MAAA,CAAA,IAAA,CAAA,CAAA;AACA,SAAA,CAAA,GAAA,yBAAA,IAAA,CAAA,CAAA;CACA,CAAA;;qBAEA,GAAA","file":"all.js","sourcesContent":["import fs from 'fs';\r\nimport koa from 'koa';\r\nimport bodyParser from 'koa-bodyparser';\r\nimport Router from 'koa-router';\r\nimport logger from 'koa-logger';\r\n\r\nvar app = koa();\r\nvar router = Router();\r\n\r\napp.use(function* responseTime(next) {\r\n  var start = new Date;\r\n  yield next;\r\n  var ms = new Date - start;\r\n  this.set('X-Response-Time', ms + 'ms');\r\n});\r\napp.use(router.routes());\r\napp.use(router.allowedMethods());\r\napp.use(logger());\r\n\r\nlet controllersPath = __dirname + '/controllers';\r\n\r\nfor (let fileName of fs.readdirSync(controllersPath)) {\r\n  let controllerName = fileName.substring(0, fileName.length - 3);\r\n  let controller = require(controllersPath + '/' + fileName);\r\n  \r\n  console.log(`Register Controller: ${controllerName}`);\r\n  \r\n  for(let property in controller) {\r\n    let httpMethod = property; /** TODO: Validate */\r\n    let path = `/api/${controllerName}`;\r\n    let handler = controller[property];\r\n    \r\n    console.log(`${property}: ${path}`);\r\n    \r\n    router[httpMethod](path, handler);\r\n  }\r\n}\r\n\r\napp.init = () => {\r\n  let port = process.env.PORT || 44360;\r\n  app.listen(port);\r\n  console.log(`Listening on port: ${port}`);\r\n};\r\n\r\nexport default app;","let sectionsController = {\r\n  * get(next) {\r\n    yield next;\r\n    this.body = 'GET: assignments';\r\n  }\r\n};\r\n\r\nexport default sectionsController;","let assignmentsController = {\r\n  * get(next) {\r\n    yield next;\r\n    this.body = 'GET: sections';\r\n  }\r\n};\r\n\r\nexport default assignmentsController;"],"sourceRoot":"/source/"}